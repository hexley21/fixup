basePath: /v1
definitions:
  CategoryType:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  CreateCategoryTypeInput:
    properties:
      name:
        maxLength: 30
        minLength: 2
        type: string
    required:
    - name
    type: object
  UpdateCategoryTypeInput:
    properties:
      name:
        maxLength: 30
        minLength: 2
        type: string
    required:
    - name
    type: object
  rest.ApiResponse-CategoryType:
    properties:
      data:
        $ref: '#/definitions/CategoryType'
    type: object
  rest.ApiResponse-array_CategoryType:
    properties:
      data:
        items:
          $ref: '#/definitions/CategoryType'
        type: array
    type: object
  rest.ErrorResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:80
info:
  contact: {}
  description: Handles catalog operations
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Catalog Microservice
  version: 1.0.0-alpha0
paths:
  /category-types:
    get:
      description: Retrieves a category type range
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: per_page
        type: integer
      responses:
        "200":
          description: OK - Successfully retrieved the category types
          schema:
            $ref: '#/definitions/rest.ApiResponse-array_CategoryType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error - An error occurred while retrieving
            the category type
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      security:
      - access_token: []
      summary: Retrieve a category types
      tags:
      - CategoryType
    post:
      description: Creates a new category type with the provided data.
      parameters:
      - description: Category type data
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/CreateCategoryTypeInput'
      responses:
        "201":
          description: Created - Successfully created the category type
          schema:
            $ref: '#/definitions/rest.ApiResponse-CategoryType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error - An error occurred while creating the
            category type
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      security:
      - access_token: []
      summary: Create a new category type
      tags:
      - CategoryType
  /category-types/{id}:
    delete:
      description: Deletes a category type specified by the ID.
      parameters:
      - description: The ID of the category type to delete
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content - Successfully deleted the category type
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error - An error occurred while deleting the
            category type
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      security:
      - access_token: []
      summary: Delete a category type by ID
      tags:
      - CategoryType
    get:
      description: Retrieves a category type specified by the ID.
      parameters:
      - description: The ID of the category type to retrieve
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK - Successfully retrieved the category type
          schema:
            $ref: '#/definitions/rest.ApiResponse-CategoryType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error - An error occurred while retrieving
            the category type
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      security:
      - access_token: []
      summary: Retrieve a category type by ID
      tags:
      - CategoryType
    patch:
      description: Updates a category type specified by the ID.
      parameters:
      - description: The ID of the category type to update
        in: path
        name: id
        required: true
        type: integer
      - description: Category type data
        in: body
        name: dto
        required: true
        schema:
          $ref: '#/definitions/UpdateCategoryTypeInput'
      responses:
        "200":
          description: OK - Successfully updated the category type
          schema:
            $ref: '#/definitions/rest.ApiResponse-CategoryType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error - An error occurred while updating the
            category type
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      security:
      - access_token: []
      summary: Update a category type by ID
      tags:
      - CategoryType
schemes:
- http
securityDefinitions:
  access_token:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
