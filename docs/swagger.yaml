definitions:
  UpdateUserInput:
    properties:
      email:
        maxLength: 40
        type: string
      first_name:
        maxLength: 50
        minLength: 2
        type: string
      last_name:
        maxLength: 50
        minLength: 2
        type: string
      phone_number:
        type: string
    type: object
  User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      picture_url:
        type: string
      role:
        type: string
      user_status:
        type: boolean
    type: object
  rest.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  rest.apiResponse-User:
    properties:
      data:
        $ref: '#/definitions/User'
    type: object
info:
  contact: {}
paths:
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID or the currently authenticated user if "me"
        is provided
      parameters:
      - description: User ID or 'me'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: NotFound
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieve user details by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.apiResponse-User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Find user by ID
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Update user data by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.apiResponse-User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Update user data
      tags:
      - users
  /users/{id}/pfp:
    put:
      consumes:
      - multipart/form-data
      description: Upload a profile picture for the user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Profile picture file
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Upload profile picture
      tags:
      - users
swagger: "2.0"
