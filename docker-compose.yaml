services:
  swagger-ui:
    build:
      context: .
      dockerfile: ./build/Dockerfile.swagger
    ports:
      - "8080:8080"
  user-db:
      image: postgres:latest
      container_name: user-db
      hostname: db
      ports:
          - "5433:5432"
      volumes:
          - ./docker-data/user/postgres-data:/var/lib/postgresql/data
      restart: unless-stopped
      env_file: .env
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=user
      healthcheck:
          test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d user'"]
          interval: 1s
          timeout: 1s
          retries: 30
  order-db:
      image: postgis/postgis:latest
      container_name: order-db
      hostname: db
      ports:
          - "5434:5432"
      volumes:
          - ./docker-data/order/postgres-data:/var/lib/postgresql/data
      restart: unless-stopped
      env_file: .env
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=order
      healthcheck:
          test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d order'"]
          interval: 1s
          timeout: 1s
          retries: 30
  catalog-db:
      image: postgis/postgis:latest
      container_name: catalog-db
      hostname: db
      ports:
          - "5435:5432"
      volumes:
          - ./docker-data/catalog/postgres-data:/var/lib/postgresql/data
      restart: unless-stopped
      env_file: .env
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=catalog
      healthcheck:
          test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d catalog'"]
          interval: 1s
          timeout: 1s
          retries: 30